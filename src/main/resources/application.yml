server:
  port: 8081

spring:
  application:
    name: demo
  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    cache:
      channel:
        size: 50   # increase channel cache for higher throughput

  datasource:
    url: jdbc:h2:mem:modulith;MODE=LEGACY;DB_CLOSE_DELAY=-1
    driver-class-name: org.h2.Driver

  modulith:
    events:
      externalization:
        enabled: false
      jdbc:
        schema-initialization:
          enabled: true
      # H2 in-memory: disable restart republish (state is ephemeral)
      republish-outstanding-events-on-restart: false
      # Remove completed publications immediately in dev/H2 to avoid growth during long runs
      completion-mode: DELETE

logging:
  level:
    org.springframework.modulith: INFO
    org.springframework.amqp: INFO

app:
  amqp:
    new-orders:
      # Control whether to bind queue 'new-orders' to exchange 'BookStoreExchange' with routing key 'orders.new'.
      # Default false to avoid unintended feedback loops with @Externalized(OrderCreatedEvent).
      bind: false
      # Max processing attempts before rejecting to DLQ. Can be overridden via
      # env var SPRING_APPLICATION_JSON or CLI: --app.amqp.new-orders.retry-max-attempts=5
      retry-max-attempts: 3
